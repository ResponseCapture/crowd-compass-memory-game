/*!
 * crowd-compass-memory-game v1.0.0 (https://github.com/ResponseCapture/crowd-compass-memory-game#readme)
 * Copyright 2015 
 * Licensed under the ISC
 */
function shuffle(array){for(var t,i,m=array.length;m;)i=Math.floor(Math.random()*m--),t=array[m],array[m]=array[i],array[i]=t;return array}function MemoryGame(timeout,interval){this.level=1,this.newGame=function(booster){switch(booster=booster||0,this.level){case 3:return Game({cards:level3,limit:10+booster,cardFront:"card-front-3.png"},timeout,interval);case 2:return Game({cards:level2,limit:20+booster,cardFront:"card-front-2.png"},timeout,interval);default:return Game({cards:level1,limit:30+booster,cardFront:"card-front-1.png"},timeout,interval)}}}function Game(options,timeout,interval){var timer,begin,timer,critical=5,limit=options.limit,limitMs=1e3*limit,noop=function(){},game={};game.cardFront=options.cardFront,mprogress.start(),mprogress.set(.99999),game.deck=shuffle(options.cards.concat(options.cards)).map(function(picture){return{item:picture,isFaceUp:!1}});var checkNext,check=function(card){card.isFaceUp||(checkNext?checkNext(card):(card.isFaceUp=!0,checkNext=function(nextCard){nextCard.isFaceUp=!0,nextCard.item===card.item?(nextCard.celebrate=card.celebrate=!0,timeout(function(){nextCard.celebrate=card.celebrate=!1},2e3),checkNext=void 0):timeout(function(){nextCard.isFaceUp=card.isFaceUp=!1,checkNext=void 0},250),game.deck.every(function(c){return c.isFaceUp})&&stop()}))},start=function(){game.check=check,begin=new Date,timer=interval(function(){var elapsed=game.elapsedMs()/1e3,remaining=game.remaining();game.isCritical=Math.floor(remaining/1e3)<=critical,mprogress.set((remaining||0)/limitMs),elapsed>=limit&&stop()},50)},stop=function(){interval.cancel(timer),mprogress.set(1),mprogress.end(),game.check=noop;var end=new Date-begin,faceDown=game.deck.filter(function(c){return!c.isFaceUp}).length;timeout(function(){game.results={time:Math.ceil(end/1e3),total:game.deck.length/2,missing:Math.ceil(faceDown/2)}},1500)};return game.elapsedMs=function(){return new Date-begin},game.remaining=function(){if(begin){var elapsed=game.elapsedMs();return limitMs>elapsed?limitMs-elapsed:0}return limitMs},game.check=function(card){start(),check(card)},game}var mprogress=new Mprogress({parent:"#progress",trickle:!1,minimum:0}),level1=["L1-placer","L1-clock","L1-personality","L1-frazzled","L1-supplies","L1-phones"],level2=["L1-placer","L1-woman-docs","L2-app-icons","L2-boxing","L2-crowd","L2-decisions"],level3=["L1-placer","L2-jumping-guy","L3-party-girl","L3-sleeping-woman","L3-super-woman","L3-tired-guy"];$(document).on("shown.zmd.hierarchicalDisplay",function(e){$(e.target).hierarchicalDisplay("_removeAnimations")});var app=angular.module("memory-game",[]);app.directive("masonry",function(){return{restrict:"AC",link:function(scope,element){scope.$watch(element.children(),function(){element.masonry({itemSelector:".masonry-item",columnWidth:".grid-sizer",percentPosition:!0})})}}}),app.directive("hierarchical",function(){return{restrict:"AC",link:function(scope,element){scope.$watch(element.children(),function(){element.hierarchicalDisplay()})}}}),app.controller("CardController",["$scope","$timeout","$interval",function($scope,$timeout,$interval){var memoryGame=new MemoryGame($timeout,$interval);availableLevels={1:!0},$scope.user={},$scope.newGameIfNotStarted=function(){$scope.game=$scope.game||memoryGame.newGame()},$scope.newGame=function(booster){$scope.game=memoryGame.newGame(booster)},$scope.currentLevel=function(){return memoryGame.level},$scope.levelIsAvailable=function(level){return!!availableLevels[level]},$scope.playLevel=function(level){availableLevels[level]=!0,memoryGame.level=level,$scope.game=memoryGame.newGame()}}]);